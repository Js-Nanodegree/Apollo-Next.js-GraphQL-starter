{"version":3,"file":"static/webpack/static\\development\\pages\\login.js.e0df5ee5eb5bd8209f89.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import React, { PureComponent } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { Mutation } from 'react-apollo';\r\nimport App from '../components/App'\r\nimport LoginContainer from '../containers/Login'\r\n\r\nconst LOGIN_MUTATION = gql`\r\nmutation Login($input: LoginInpuit){\r\n  login(input: $input){\r\n    email\r\n    password\r\n  }\r\n}`\r\n\r\nclass LoginPage extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target\r\n    return this.setState({ [name]: value })\r\n  }\r\n\r\n  // handleLogin = () => {\r\n\r\n  //   this.setState({ loggingIn: true, error: '', message: '' })\r\n  //   this.props.LOGIN_MUTATION({\r\n  //     variables: {\r\n  //       input: {\r\n  //         email: this.state.email,\r\n  //         password: this.state.password\r\n  //       }\r\n  //     },\r\n  //     refetchQueries: POST_LOGIN_QUERIES ? [\r\n  //       {\r\n  //         query: POST_LOGIN_QUERIES\r\n  //       }\r\n  //     ] : []\r\n\r\n  //   }).then((response) => {\r\n  //     this.setState({\r\n  //       token: response.data.Login.token,\r\n  //       user: response.data.Login.user,\r\n  //       error: '',\r\n  //       message: 'Successfully logged in.',\r\n  //       loggingIn: false\r\n  //     })\r\n  //     Router.push('/home', '/', { shallow: true })// Redirect to the index on successful login\r\n  //   }).catch((error) => {\r\n  //     console.error(error)\r\n  //     this.setState({ error: error.message, message: '', loggingIn: false })\r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n    const { email, password } = this.state\r\n    return (\r\n      <App\r\n        showNavigation={false}\r\n        title='Login'\r\n      >\r\n        <Mutation\r\n          mutation={LOGIN_MUTATION}\r\n          variabled={{\r\n            input: {\r\n              email,\r\n              password\r\n            }\r\n          }}\r\n        >\r\n          {(login, { loading, error }) => {\r\n            return <LoginContainer\r\n              error={error}\r\n              handleChange={this.handleChange}\r\n              handleLogin={login}\r\n              email={email}\r\n              password={password}\r\n              loading={loading}\r\n            />\r\n          }}\r\n        </Mutation>\r\n      </App>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginPage\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AAAA;AAAA;AAEA;AACA;AACA;AAVA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAFA;AADA;AAFA;AASA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAIA;;;;AA3EA;AACA;AA6EA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}