{"version":3,"file":"static/webpack/static\\development\\pages\\login.js.9472c17cff9460237c64.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import React, { PureComponent } from 'react'\r\nimport { graphql, compose } from 'react-apollo'\r\nimport { withRouter } from 'next/router'\r\nimport gql from 'graphql-tag'\r\nimport Router from 'next/router'\r\nimport App from '../components/App'\r\nimport Loading from '../components/Loading'\r\nimport withData from '../lib/withData'\r\n\r\nimport LoginContainer from '../containers/Login'\r\n\r\nclass LoginPage extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      token: '',\r\n      user: {},\r\n      error: '',\r\n      loggingIn: false\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleLogin = () => {\r\n\r\n    this.setState({ loggingIn: true, error: '', message: '' })\r\n    this.props.LOGIN_MUTATION({\r\n      variables: {\r\n        input: {\r\n          email: this.state.email,\r\n          password: this.state.password\r\n        }\r\n      },\r\n      refetchQueries: POST_LOGIN_QUERIES ? [\r\n        {\r\n          query: POST_LOGIN_QUERIES\r\n        }\r\n      ] : []\r\n\r\n    }).then((response) => {\r\n      this.setState({\r\n        token: response.data.Login.token,\r\n        user: response.data.Login.user,\r\n        error: '',\r\n        message: 'Successfully logged in.',\r\n        loggingIn: false\r\n      })\r\n      Router.push('/home', '/', { shallow: true })// Redirect to the index on successful login\r\n    }).catch((error) => {\r\n      console.error(error)\r\n      this.setState({ error: error.message, message: '', loggingIn: false })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { email, password, message, error, loggingIn } = this.state\r\n    return (\r\n      <App\r\n        showNavigation={false}\r\n        title='Login'\r\n      >\r\n\r\n        <LoginContainer\r\n          message={message}\r\n          error={error}\r\n          handleChange={this.handleChange}\r\n          handleLogin={this.handleLogin}\r\n          email={email}\r\n          password={password}\r\n          loggingIn={loggingIn}\r\n        />\r\n\r\n      </App>\r\n    )\r\n  }\r\n}\r\n\r\nconst LOGIN_MUTATION = gql`\r\n    mutation login($input: LoginInput) {\r\n        Login(input: $input) {\r\n            token\r\n        }\r\n    }\r\n`\r\n\r\nconst POST_LOGIN_QUERIES = gql`\r\n    query {\r\n        Me {\r\n            _id\r\n            firstName\r\n            lastName\r\n            email\r\n        }\r\n    }`\r\n\r\n\r\n\r\n\r\nexport default LoginPage\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAhBA;AAmBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAEA;AADA;AARA;AAcA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AA7CA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;;;AAqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;;;;AAtEA;AACA;AAwEA;AAQA;AAaA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}