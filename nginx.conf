# Redirect www to non-www
server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
}

# The main configuration for your application
server {
    server_name example.com;

    root /var/www/your-app-path;
    index index.html index.htm;

    # Increase the maximum body size to account for large file uploads like images
    client_max_body_size 20M;

    # Don't cache the service working - causes a lot of problems
    location /service-worker.js { 
        add_header Cache-Control "no-cache"; 
        expires off; access_log off; 
    }

    # Set the expiry for static resources to 1 day
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 1h;
    }

    # Because next don't allow you to build outside of the _next directory
    # and service workers have to be in the root directory
    # We have to build the service worker into the _next directory but allow requests to it from the root domain
    location = /service-worker.js {
        alias /var/www/your-app-path/_next/service-worker.js;
    }

    gzip on;
    gzip_min_length 512;
    gzip_vary on;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_comp_level  6;

    access_log /etc/nginx/logs/your-app.access;
    error_log /etc/nginx/logs/your-app.error error;

    # because the front end and server are decoupled and we want all requests to going through the one domain
    # We have to create a proxy for all requests that go to graphql
    location /graphql {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # 404 if a file is requested (so the main app isn't served)
    location ~ ^.+\..+$ {
        try_files $uri =404;
    }
}